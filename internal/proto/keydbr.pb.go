// Code generated by protoc-gen-go. DO NOT EDIT.
// source: keydbr.proto

package remote

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type InMessage struct {
	// Types that are valid to be assigned to Request:
	//	*InMessage_Open
	//	*InMessage_Remove
	//	*InMessage_Close
	//	*InMessage_Get
	//	*InMessage_Put
	//	*InMessage_Begin
	//	*InMessage_Commit
	Request              isInMessage_Request `protobuf_oneof:"request"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *InMessage) Reset()         { *m = InMessage{} }
func (m *InMessage) String() string { return proto.CompactTextString(m) }
func (*InMessage) ProtoMessage()    {}
func (*InMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_keydbr_7f621dcb25d613fd, []int{0}
}
func (m *InMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InMessage.Unmarshal(m, b)
}
func (m *InMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InMessage.Marshal(b, m, deterministic)
}
func (dst *InMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InMessage.Merge(dst, src)
}
func (m *InMessage) XXX_Size() int {
	return xxx_messageInfo_InMessage.Size(m)
}
func (m *InMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_InMessage.DiscardUnknown(m)
}

var xxx_messageInfo_InMessage proto.InternalMessageInfo

type isInMessage_Request interface {
	isInMessage_Request()
}

type InMessage_Open struct {
	Open *OpenRequest `protobuf:"bytes,1,opt,name=open,proto3,oneof"`
}

type InMessage_Remove struct {
	Remove *RemoveRequest `protobuf:"bytes,2,opt,name=remove,proto3,oneof"`
}

type InMessage_Close struct {
	Close *CloseRequest `protobuf:"bytes,3,opt,name=close,proto3,oneof"`
}

type InMessage_Get struct {
	Get *GetRequest `protobuf:"bytes,4,opt,name=get,proto3,oneof"`
}

type InMessage_Put struct {
	Put *PutRequest `protobuf:"bytes,5,opt,name=put,proto3,oneof"`
}

type InMessage_Begin struct {
	Begin *BeginRequest `protobuf:"bytes,6,opt,name=begin,proto3,oneof"`
}

type InMessage_Commit struct {
	Commit *CommitRequest `protobuf:"bytes,7,opt,name=commit,proto3,oneof"`
}

func (*InMessage_Open) isInMessage_Request() {}

func (*InMessage_Remove) isInMessage_Request() {}

func (*InMessage_Close) isInMessage_Request() {}

func (*InMessage_Get) isInMessage_Request() {}

func (*InMessage_Put) isInMessage_Request() {}

func (*InMessage_Begin) isInMessage_Request() {}

func (*InMessage_Commit) isInMessage_Request() {}

func (m *InMessage) GetRequest() isInMessage_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *InMessage) GetOpen() *OpenRequest {
	if x, ok := m.GetRequest().(*InMessage_Open); ok {
		return x.Open
	}
	return nil
}

func (m *InMessage) GetRemove() *RemoveRequest {
	if x, ok := m.GetRequest().(*InMessage_Remove); ok {
		return x.Remove
	}
	return nil
}

func (m *InMessage) GetClose() *CloseRequest {
	if x, ok := m.GetRequest().(*InMessage_Close); ok {
		return x.Close
	}
	return nil
}

func (m *InMessage) GetGet() *GetRequest {
	if x, ok := m.GetRequest().(*InMessage_Get); ok {
		return x.Get
	}
	return nil
}

func (m *InMessage) GetPut() *PutRequest {
	if x, ok := m.GetRequest().(*InMessage_Put); ok {
		return x.Put
	}
	return nil
}

func (m *InMessage) GetBegin() *BeginRequest {
	if x, ok := m.GetRequest().(*InMessage_Begin); ok {
		return x.Begin
	}
	return nil
}

func (m *InMessage) GetCommit() *CommitRequest {
	if x, ok := m.GetRequest().(*InMessage_Commit); ok {
		return x.Commit
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*InMessage) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _InMessage_OneofMarshaler, _InMessage_OneofUnmarshaler, _InMessage_OneofSizer, []interface{}{
		(*InMessage_Open)(nil),
		(*InMessage_Remove)(nil),
		(*InMessage_Close)(nil),
		(*InMessage_Get)(nil),
		(*InMessage_Put)(nil),
		(*InMessage_Begin)(nil),
		(*InMessage_Commit)(nil),
	}
}

func _InMessage_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*InMessage)
	// request
	switch x := m.Request.(type) {
	case *InMessage_Open:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Open); err != nil {
			return err
		}
	case *InMessage_Remove:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Remove); err != nil {
			return err
		}
	case *InMessage_Close:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Close); err != nil {
			return err
		}
	case *InMessage_Get:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Get); err != nil {
			return err
		}
	case *InMessage_Put:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Put); err != nil {
			return err
		}
	case *InMessage_Begin:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Begin); err != nil {
			return err
		}
	case *InMessage_Commit:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Commit); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("InMessage.Request has unexpected type %T", x)
	}
	return nil
}

func _InMessage_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*InMessage)
	switch tag {
	case 1: // request.open
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(OpenRequest)
		err := b.DecodeMessage(msg)
		m.Request = &InMessage_Open{msg}
		return true, err
	case 2: // request.remove
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RemoveRequest)
		err := b.DecodeMessage(msg)
		m.Request = &InMessage_Remove{msg}
		return true, err
	case 3: // request.close
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CloseRequest)
		err := b.DecodeMessage(msg)
		m.Request = &InMessage_Close{msg}
		return true, err
	case 4: // request.get
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GetRequest)
		err := b.DecodeMessage(msg)
		m.Request = &InMessage_Get{msg}
		return true, err
	case 5: // request.put
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PutRequest)
		err := b.DecodeMessage(msg)
		m.Request = &InMessage_Put{msg}
		return true, err
	case 6: // request.begin
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BeginRequest)
		err := b.DecodeMessage(msg)
		m.Request = &InMessage_Begin{msg}
		return true, err
	case 7: // request.commit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CommitRequest)
		err := b.DecodeMessage(msg)
		m.Request = &InMessage_Commit{msg}
		return true, err
	default:
		return false, nil
	}
}

func _InMessage_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*InMessage)
	// request
	switch x := m.Request.(type) {
	case *InMessage_Open:
		s := proto.Size(x.Open)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *InMessage_Remove:
		s := proto.Size(x.Remove)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *InMessage_Close:
		s := proto.Size(x.Close)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *InMessage_Get:
		s := proto.Size(x.Get)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *InMessage_Put:
		s := proto.Size(x.Put)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *InMessage_Begin:
		s := proto.Size(x.Begin)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *InMessage_Commit:
		s := proto.Size(x.Commit)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type OutMessage struct {
	// Types that are valid to be assigned to Reply:
	//	*OutMessage_Open
	//	*OutMessage_Remove
	//	*OutMessage_Close
	//	*OutMessage_Get
	//	*OutMessage_Put
	//	*OutMessage_Begin
	//	*OutMessage_Commit
	Reply                isOutMessage_Reply `protobuf_oneof:"reply"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *OutMessage) Reset()         { *m = OutMessage{} }
func (m *OutMessage) String() string { return proto.CompactTextString(m) }
func (*OutMessage) ProtoMessage()    {}
func (*OutMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_keydbr_7f621dcb25d613fd, []int{1}
}
func (m *OutMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OutMessage.Unmarshal(m, b)
}
func (m *OutMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OutMessage.Marshal(b, m, deterministic)
}
func (dst *OutMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OutMessage.Merge(dst, src)
}
func (m *OutMessage) XXX_Size() int {
	return xxx_messageInfo_OutMessage.Size(m)
}
func (m *OutMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_OutMessage.DiscardUnknown(m)
}

var xxx_messageInfo_OutMessage proto.InternalMessageInfo

type isOutMessage_Reply interface {
	isOutMessage_Reply()
}

type OutMessage_Open struct {
	Open *OpenReply `protobuf:"bytes,1,opt,name=open,proto3,oneof"`
}

type OutMessage_Remove struct {
	Remove *RemoveReply `protobuf:"bytes,2,opt,name=remove,proto3,oneof"`
}

type OutMessage_Close struct {
	Close *CloseReply `protobuf:"bytes,3,opt,name=close,proto3,oneof"`
}

type OutMessage_Get struct {
	Get *GetReply `protobuf:"bytes,4,opt,name=get,proto3,oneof"`
}

type OutMessage_Put struct {
	Put *PutReply `protobuf:"bytes,5,opt,name=put,proto3,oneof"`
}

type OutMessage_Begin struct {
	Begin *BeginReply `protobuf:"bytes,6,opt,name=begin,proto3,oneof"`
}

type OutMessage_Commit struct {
	Commit *CommitReply `protobuf:"bytes,7,opt,name=commit,proto3,oneof"`
}

func (*OutMessage_Open) isOutMessage_Reply() {}

func (*OutMessage_Remove) isOutMessage_Reply() {}

func (*OutMessage_Close) isOutMessage_Reply() {}

func (*OutMessage_Get) isOutMessage_Reply() {}

func (*OutMessage_Put) isOutMessage_Reply() {}

func (*OutMessage_Begin) isOutMessage_Reply() {}

func (*OutMessage_Commit) isOutMessage_Reply() {}

func (m *OutMessage) GetReply() isOutMessage_Reply {
	if m != nil {
		return m.Reply
	}
	return nil
}

func (m *OutMessage) GetOpen() *OpenReply {
	if x, ok := m.GetReply().(*OutMessage_Open); ok {
		return x.Open
	}
	return nil
}

func (m *OutMessage) GetRemove() *RemoveReply {
	if x, ok := m.GetReply().(*OutMessage_Remove); ok {
		return x.Remove
	}
	return nil
}

func (m *OutMessage) GetClose() *CloseReply {
	if x, ok := m.GetReply().(*OutMessage_Close); ok {
		return x.Close
	}
	return nil
}

func (m *OutMessage) GetGet() *GetReply {
	if x, ok := m.GetReply().(*OutMessage_Get); ok {
		return x.Get
	}
	return nil
}

func (m *OutMessage) GetPut() *PutReply {
	if x, ok := m.GetReply().(*OutMessage_Put); ok {
		return x.Put
	}
	return nil
}

func (m *OutMessage) GetBegin() *BeginReply {
	if x, ok := m.GetReply().(*OutMessage_Begin); ok {
		return x.Begin
	}
	return nil
}

func (m *OutMessage) GetCommit() *CommitReply {
	if x, ok := m.GetReply().(*OutMessage_Commit); ok {
		return x.Commit
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*OutMessage) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _OutMessage_OneofMarshaler, _OutMessage_OneofUnmarshaler, _OutMessage_OneofSizer, []interface{}{
		(*OutMessage_Open)(nil),
		(*OutMessage_Remove)(nil),
		(*OutMessage_Close)(nil),
		(*OutMessage_Get)(nil),
		(*OutMessage_Put)(nil),
		(*OutMessage_Begin)(nil),
		(*OutMessage_Commit)(nil),
	}
}

func _OutMessage_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*OutMessage)
	// reply
	switch x := m.Reply.(type) {
	case *OutMessage_Open:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Open); err != nil {
			return err
		}
	case *OutMessage_Remove:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Remove); err != nil {
			return err
		}
	case *OutMessage_Close:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Close); err != nil {
			return err
		}
	case *OutMessage_Get:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Get); err != nil {
			return err
		}
	case *OutMessage_Put:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Put); err != nil {
			return err
		}
	case *OutMessage_Begin:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Begin); err != nil {
			return err
		}
	case *OutMessage_Commit:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Commit); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("OutMessage.Reply has unexpected type %T", x)
	}
	return nil
}

func _OutMessage_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*OutMessage)
	switch tag {
	case 1: // reply.open
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(OpenReply)
		err := b.DecodeMessage(msg)
		m.Reply = &OutMessage_Open{msg}
		return true, err
	case 2: // reply.remove
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RemoveReply)
		err := b.DecodeMessage(msg)
		m.Reply = &OutMessage_Remove{msg}
		return true, err
	case 3: // reply.close
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CloseReply)
		err := b.DecodeMessage(msg)
		m.Reply = &OutMessage_Close{msg}
		return true, err
	case 4: // reply.get
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GetReply)
		err := b.DecodeMessage(msg)
		m.Reply = &OutMessage_Get{msg}
		return true, err
	case 5: // reply.put
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PutReply)
		err := b.DecodeMessage(msg)
		m.Reply = &OutMessage_Put{msg}
		return true, err
	case 6: // reply.begin
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BeginReply)
		err := b.DecodeMessage(msg)
		m.Reply = &OutMessage_Begin{msg}
		return true, err
	case 7: // reply.commit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CommitReply)
		err := b.DecodeMessage(msg)
		m.Reply = &OutMessage_Commit{msg}
		return true, err
	default:
		return false, nil
	}
}

func _OutMessage_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*OutMessage)
	// reply
	switch x := m.Reply.(type) {
	case *OutMessage_Open:
		s := proto.Size(x.Open)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *OutMessage_Remove:
		s := proto.Size(x.Remove)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *OutMessage_Close:
		s := proto.Size(x.Close)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *OutMessage_Get:
		s := proto.Size(x.Get)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *OutMessage_Put:
		s := proto.Size(x.Put)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *OutMessage_Begin:
		s := proto.Size(x.Begin)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *OutMessage_Commit:
		s := proto.Size(x.Commit)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type OpenRequest struct {
	Dbname               string   `protobuf:"bytes,1,opt,name=dbname,proto3" json:"dbname,omitempty"`
	Create               bool     `protobuf:"varint,2,opt,name=create,proto3" json:"create,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenRequest) Reset()         { *m = OpenRequest{} }
func (m *OpenRequest) String() string { return proto.CompactTextString(m) }
func (*OpenRequest) ProtoMessage()    {}
func (*OpenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_keydbr_7f621dcb25d613fd, []int{2}
}
func (m *OpenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenRequest.Unmarshal(m, b)
}
func (m *OpenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenRequest.Marshal(b, m, deterministic)
}
func (dst *OpenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenRequest.Merge(dst, src)
}
func (m *OpenRequest) XXX_Size() int {
	return xxx_messageInfo_OpenRequest.Size(m)
}
func (m *OpenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OpenRequest proto.InternalMessageInfo

func (m *OpenRequest) GetDbname() string {
	if m != nil {
		return m.Dbname
	}
	return ""
}

func (m *OpenRequest) GetCreate() bool {
	if m != nil {
		return m.Create
	}
	return false
}

type OpenReply struct {
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenReply) Reset()         { *m = OpenReply{} }
func (m *OpenReply) String() string { return proto.CompactTextString(m) }
func (*OpenReply) ProtoMessage()    {}
func (*OpenReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_keydbr_7f621dcb25d613fd, []int{3}
}
func (m *OpenReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenReply.Unmarshal(m, b)
}
func (m *OpenReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenReply.Marshal(b, m, deterministic)
}
func (dst *OpenReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenReply.Merge(dst, src)
}
func (m *OpenReply) XXX_Size() int {
	return xxx_messageInfo_OpenReply.Size(m)
}
func (m *OpenReply) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenReply.DiscardUnknown(m)
}

var xxx_messageInfo_OpenReply proto.InternalMessageInfo

func (m *OpenReply) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type RemoveRequest struct {
	Dbname               string   `protobuf:"bytes,1,opt,name=dbname,proto3" json:"dbname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveRequest) Reset()         { *m = RemoveRequest{} }
func (m *RemoveRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveRequest) ProtoMessage()    {}
func (*RemoveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_keydbr_7f621dcb25d613fd, []int{4}
}
func (m *RemoveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveRequest.Unmarshal(m, b)
}
func (m *RemoveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveRequest.Marshal(b, m, deterministic)
}
func (dst *RemoveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveRequest.Merge(dst, src)
}
func (m *RemoveRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveRequest.Size(m)
}
func (m *RemoveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveRequest proto.InternalMessageInfo

func (m *RemoveRequest) GetDbname() string {
	if m != nil {
		return m.Dbname
	}
	return ""
}

type RemoveReply struct {
	Error                string   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveReply) Reset()         { *m = RemoveReply{} }
func (m *RemoveReply) String() string { return proto.CompactTextString(m) }
func (*RemoveReply) ProtoMessage()    {}
func (*RemoveReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_keydbr_7f621dcb25d613fd, []int{5}
}
func (m *RemoveReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveReply.Unmarshal(m, b)
}
func (m *RemoveReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveReply.Marshal(b, m, deterministic)
}
func (dst *RemoveReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveReply.Merge(dst, src)
}
func (m *RemoveReply) XXX_Size() int {
	return xxx_messageInfo_RemoveReply.Size(m)
}
func (m *RemoveReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveReply.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveReply proto.InternalMessageInfo

func (m *RemoveReply) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type CloseRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseRequest) Reset()         { *m = CloseRequest{} }
func (m *CloseRequest) String() string { return proto.CompactTextString(m) }
func (*CloseRequest) ProtoMessage()    {}
func (*CloseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_keydbr_7f621dcb25d613fd, []int{6}
}
func (m *CloseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseRequest.Unmarshal(m, b)
}
func (m *CloseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseRequest.Marshal(b, m, deterministic)
}
func (dst *CloseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseRequest.Merge(dst, src)
}
func (m *CloseRequest) XXX_Size() int {
	return xxx_messageInfo_CloseRequest.Size(m)
}
func (m *CloseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CloseRequest proto.InternalMessageInfo

type CloseReply struct {
	Error                string   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseReply) Reset()         { *m = CloseReply{} }
func (m *CloseReply) String() string { return proto.CompactTextString(m) }
func (*CloseReply) ProtoMessage()    {}
func (*CloseReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_keydbr_7f621dcb25d613fd, []int{7}
}
func (m *CloseReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseReply.Unmarshal(m, b)
}
func (m *CloseReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseReply.Marshal(b, m, deterministic)
}
func (dst *CloseReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseReply.Merge(dst, src)
}
func (m *CloseReply) XXX_Size() int {
	return xxx_messageInfo_CloseReply.Size(m)
}
func (m *CloseReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseReply.DiscardUnknown(m)
}

var xxx_messageInfo_CloseReply proto.InternalMessageInfo

func (m *CloseReply) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type GetRequest struct {
	Txid                 int32    `protobuf:"varint,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Key                  []byte   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_keydbr_7f621dcb25d613fd, []int{8}
}
func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (dst *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(dst, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetTxid() int32 {
	if m != nil {
		return m.Txid
	}
	return 0
}

func (m *GetRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type GetReply struct {
	Value                []byte   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetReply) Reset()         { *m = GetReply{} }
func (m *GetReply) String() string { return proto.CompactTextString(m) }
func (*GetReply) ProtoMessage()    {}
func (*GetReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_keydbr_7f621dcb25d613fd, []int{9}
}
func (m *GetReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReply.Unmarshal(m, b)
}
func (m *GetReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReply.Marshal(b, m, deterministic)
}
func (dst *GetReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReply.Merge(dst, src)
}
func (m *GetReply) XXX_Size() int {
	return xxx_messageInfo_GetReply.Size(m)
}
func (m *GetReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetReply proto.InternalMessageInfo

func (m *GetReply) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *GetReply) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type PutRequest struct {
	Txid                 int32    `protobuf:"varint,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Key                  []byte   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutRequest) Reset()         { *m = PutRequest{} }
func (m *PutRequest) String() string { return proto.CompactTextString(m) }
func (*PutRequest) ProtoMessage()    {}
func (*PutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_keydbr_7f621dcb25d613fd, []int{10}
}
func (m *PutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutRequest.Unmarshal(m, b)
}
func (m *PutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutRequest.Marshal(b, m, deterministic)
}
func (dst *PutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutRequest.Merge(dst, src)
}
func (m *PutRequest) XXX_Size() int {
	return xxx_messageInfo_PutRequest.Size(m)
}
func (m *PutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutRequest proto.InternalMessageInfo

func (m *PutRequest) GetTxid() int32 {
	if m != nil {
		return m.Txid
	}
	return 0
}

func (m *PutRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *PutRequest) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type PutReply struct {
	Error                string   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutReply) Reset()         { *m = PutReply{} }
func (m *PutReply) String() string { return proto.CompactTextString(m) }
func (*PutReply) ProtoMessage()    {}
func (*PutReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_keydbr_7f621dcb25d613fd, []int{11}
}
func (m *PutReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutReply.Unmarshal(m, b)
}
func (m *PutReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutReply.Marshal(b, m, deterministic)
}
func (dst *PutReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutReply.Merge(dst, src)
}
func (m *PutReply) XXX_Size() int {
	return xxx_messageInfo_PutReply.Size(m)
}
func (m *PutReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PutReply.DiscardUnknown(m)
}

var xxx_messageInfo_PutReply proto.InternalMessageInfo

func (m *PutReply) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type BeginRequest struct {
	Table                string   `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BeginRequest) Reset()         { *m = BeginRequest{} }
func (m *BeginRequest) String() string { return proto.CompactTextString(m) }
func (*BeginRequest) ProtoMessage()    {}
func (*BeginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_keydbr_7f621dcb25d613fd, []int{12}
}
func (m *BeginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BeginRequest.Unmarshal(m, b)
}
func (m *BeginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BeginRequest.Marshal(b, m, deterministic)
}
func (dst *BeginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BeginRequest.Merge(dst, src)
}
func (m *BeginRequest) XXX_Size() int {
	return xxx_messageInfo_BeginRequest.Size(m)
}
func (m *BeginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BeginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BeginRequest proto.InternalMessageInfo

func (m *BeginRequest) GetTable() string {
	if m != nil {
		return m.Table
	}
	return ""
}

type BeginReply struct {
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BeginReply) Reset()         { *m = BeginReply{} }
func (m *BeginReply) String() string { return proto.CompactTextString(m) }
func (*BeginReply) ProtoMessage()    {}
func (*BeginReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_keydbr_7f621dcb25d613fd, []int{13}
}
func (m *BeginReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BeginReply.Unmarshal(m, b)
}
func (m *BeginReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BeginReply.Marshal(b, m, deterministic)
}
func (dst *BeginReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BeginReply.Merge(dst, src)
}
func (m *BeginReply) XXX_Size() int {
	return xxx_messageInfo_BeginReply.Size(m)
}
func (m *BeginReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BeginReply.DiscardUnknown(m)
}

var xxx_messageInfo_BeginReply proto.InternalMessageInfo

func (m *BeginReply) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type CommitRequest struct {
	Txid                 int32    `protobuf:"varint,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Sync                 bool     `protobuf:"varint,2,opt,name=sync,proto3" json:"sync,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitRequest) Reset()         { *m = CommitRequest{} }
func (m *CommitRequest) String() string { return proto.CompactTextString(m) }
func (*CommitRequest) ProtoMessage()    {}
func (*CommitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_keydbr_7f621dcb25d613fd, []int{14}
}
func (m *CommitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitRequest.Unmarshal(m, b)
}
func (m *CommitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitRequest.Marshal(b, m, deterministic)
}
func (dst *CommitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitRequest.Merge(dst, src)
}
func (m *CommitRequest) XXX_Size() int {
	return xxx_messageInfo_CommitRequest.Size(m)
}
func (m *CommitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommitRequest proto.InternalMessageInfo

func (m *CommitRequest) GetTxid() int32 {
	if m != nil {
		return m.Txid
	}
	return 0
}

func (m *CommitRequest) GetSync() bool {
	if m != nil {
		return m.Sync
	}
	return false
}

type CommitReply struct {
	Error                string   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitReply) Reset()         { *m = CommitReply{} }
func (m *CommitReply) String() string { return proto.CompactTextString(m) }
func (*CommitReply) ProtoMessage()    {}
func (*CommitReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_keydbr_7f621dcb25d613fd, []int{15}
}
func (m *CommitReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitReply.Unmarshal(m, b)
}
func (m *CommitReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitReply.Marshal(b, m, deterministic)
}
func (dst *CommitReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitReply.Merge(dst, src)
}
func (m *CommitReply) XXX_Size() int {
	return xxx_messageInfo_CommitReply.Size(m)
}
func (m *CommitReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitReply.DiscardUnknown(m)
}

var xxx_messageInfo_CommitReply proto.InternalMessageInfo

func (m *CommitReply) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*InMessage)(nil), "remote.InMessage")
	proto.RegisterType((*OutMessage)(nil), "remote.OutMessage")
	proto.RegisterType((*OpenRequest)(nil), "remote.OpenRequest")
	proto.RegisterType((*OpenReply)(nil), "remote.OpenReply")
	proto.RegisterType((*RemoveRequest)(nil), "remote.RemoveRequest")
	proto.RegisterType((*RemoveReply)(nil), "remote.RemoveReply")
	proto.RegisterType((*CloseRequest)(nil), "remote.CloseRequest")
	proto.RegisterType((*CloseReply)(nil), "remote.CloseReply")
	proto.RegisterType((*GetRequest)(nil), "remote.GetRequest")
	proto.RegisterType((*GetReply)(nil), "remote.GetReply")
	proto.RegisterType((*PutRequest)(nil), "remote.PutRequest")
	proto.RegisterType((*PutReply)(nil), "remote.PutReply")
	proto.RegisterType((*BeginRequest)(nil), "remote.BeginRequest")
	proto.RegisterType((*BeginReply)(nil), "remote.BeginReply")
	proto.RegisterType((*CommitRequest)(nil), "remote.CommitRequest")
	proto.RegisterType((*CommitReply)(nil), "remote.CommitReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// KeydbClient is the client API for Keydb service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KeydbClient interface {
	Connection(ctx context.Context, opts ...grpc.CallOption) (Keydb_ConnectionClient, error)
}

type keydbClient struct {
	cc *grpc.ClientConn
}

func NewKeydbClient(cc *grpc.ClientConn) KeydbClient {
	return &keydbClient{cc}
}

func (c *keydbClient) Connection(ctx context.Context, opts ...grpc.CallOption) (Keydb_ConnectionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Keydb_serviceDesc.Streams[0], "/remote.Keydb/Connection", opts...)
	if err != nil {
		return nil, err
	}
	x := &keydbConnectionClient{stream}
	return x, nil
}

type Keydb_ConnectionClient interface {
	Send(*InMessage) error
	Recv() (*OutMessage, error)
	grpc.ClientStream
}

type keydbConnectionClient struct {
	grpc.ClientStream
}

func (x *keydbConnectionClient) Send(m *InMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *keydbConnectionClient) Recv() (*OutMessage, error) {
	m := new(OutMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// KeydbServer is the server API for Keydb service.
type KeydbServer interface {
	Connection(Keydb_ConnectionServer) error
}

func RegisterKeydbServer(s *grpc.Server, srv KeydbServer) {
	s.RegisterService(&_Keydb_serviceDesc, srv)
}

func _Keydb_Connection_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(KeydbServer).Connection(&keydbConnectionServer{stream})
}

type Keydb_ConnectionServer interface {
	Send(*OutMessage) error
	Recv() (*InMessage, error)
	grpc.ServerStream
}

type keydbConnectionServer struct {
	grpc.ServerStream
}

func (x *keydbConnectionServer) Send(m *OutMessage) error {
	return x.ServerStream.SendMsg(m)
}

func (x *keydbConnectionServer) Recv() (*InMessage, error) {
	m := new(InMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Keydb_serviceDesc = grpc.ServiceDesc{
	ServiceName: "remote.Keydb",
	HandlerType: (*KeydbServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Connection",
			Handler:       _Keydb_Connection_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "keydbr.proto",
}

func init() { proto.RegisterFile("keydbr.proto", fileDescriptor_keydbr_7f621dcb25d613fd) }

var fileDescriptor_keydbr_7f621dcb25d613fd = []byte{
	// 560 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x94, 0xef, 0x6e, 0xd3, 0x30,
	0x10, 0xc0, 0x97, 0xb6, 0xe9, 0x9f, 0x6b, 0x87, 0x3a, 0x77, 0xa0, 0x88, 0x4f, 0xc3, 0x54, 0x74,
	0x4c, 0xac, 0xa0, 0x22, 0x81, 0xf8, 0xc0, 0x97, 0x14, 0x89, 0xa1, 0x09, 0xad, 0xca, 0x1b, 0x24,
	0xe9, 0xa9, 0x54, 0x6b, 0xe3, 0xe0, 0x3a, 0x13, 0x7d, 0x3b, 0xde, 0x80, 0x57, 0x42, 0xb6, 0x93,
	0xda, 0x8e, 0x56, 0x69, 0xdf, 0xe2, 0xd3, 0x2f, 0xbe, 0xbb, 0x9f, 0xcf, 0x86, 0xc1, 0x3d, 0xee,
	0x97, 0x09, 0x9f, 0xe6, 0x9c, 0x09, 0x46, 0xda, 0x1c, 0xb7, 0x4c, 0x20, 0xfd, 0xd7, 0x80, 0xde,
	0x8f, 0xec, 0x27, 0xee, 0x76, 0xf1, 0x0a, 0xc9, 0x5b, 0x68, 0xb1, 0x1c, 0xb3, 0xc0, 0xbb, 0xf0,
	0x2e, 0xfb, 0xb3, 0xd1, 0x54, 0x43, 0xd3, 0xbb, 0x1c, 0xb3, 0x08, 0x7f, 0x17, 0xb8, 0x13, 0x37,
	0x27, 0x91, 0x42, 0xc8, 0x7b, 0x50, 0x5b, 0x3c, 0x60, 0xd0, 0x50, 0xf0, 0xf3, 0x0a, 0x8e, 0x54,
	0xd4, 0xe0, 0x25, 0x46, 0xde, 0x81, 0x9f, 0x6e, 0xd8, 0x0e, 0x83, 0xa6, 0xe2, 0xcf, 0x2b, 0x7e,
	0x2e, 0x83, 0x06, 0xd7, 0x10, 0x79, 0x03, 0xcd, 0x15, 0x8a, 0xa0, 0xa5, 0x58, 0x52, 0xb1, 0xdf,
	0x51, 0x18, 0x52, 0x02, 0x92, 0xcb, 0x0b, 0x11, 0xf8, 0x2e, 0xb7, 0x28, 0x6c, 0x2e, 0x2f, 0x84,
	0xcc, 0x9e, 0xe0, 0x6a, 0x9d, 0x05, 0x6d, 0x37, 0x7b, 0x28, 0x83, 0x56, 0x76, 0x05, 0xc9, 0xe6,
	0x52, 0xb6, 0xdd, 0xae, 0x45, 0xd0, 0x71, 0x9b, 0x9b, 0xab, 0xa8, 0xd5, 0x9c, 0xc6, 0xc2, 0x1e,
	0x74, 0xb8, 0x0e, 0xd2, 0xbf, 0x0d, 0x80, 0xbb, 0x42, 0x54, 0x4a, 0x27, 0x8e, 0xd2, 0x33, 0x57,
	0x69, 0xbe, 0xd9, 0x1f, 0x84, 0x5e, 0xd7, 0x84, 0x8e, 0xea, 0x42, 0x35, 0x5c, 0xe9, 0xbc, 0x72,
	0x75, 0x92, 0x9a, 0x4e, 0x0d, 0x97, 0x32, 0xc7, 0xb6, 0xcc, 0xa1, 0x23, 0x53, 0x73, 0x4a, 0xe5,
	0xd8, 0x56, 0x39, 0x74, 0x54, 0x96, 0x94, 0x14, 0x79, 0xe5, 0x8a, 0x24, 0x35, 0x91, 0x65, 0x5e,
	0xad, 0xf1, 0xba, 0xa6, 0x71, 0x54, 0xd7, 0x58, 0xb6, 0x54, 0x4a, 0xec, 0x80, 0xcf, 0x65, 0x88,
	0x7e, 0x85, 0xbe, 0x35, 0x72, 0xe4, 0x05, 0xb4, 0x97, 0x49, 0x16, 0x6f, 0x51, 0x49, 0xec, 0x45,
	0xe5, 0x4a, 0xc6, 0x53, 0x8e, 0xb1, 0xd0, 0xc6, 0xba, 0x51, 0xb9, 0xa2, 0xaf, 0xa0, 0x77, 0xd0,
	0x4b, 0xce, 0xc1, 0x47, 0xce, 0x19, 0x57, 0x4c, 0x2f, 0xd2, 0x0b, 0x3a, 0x81, 0x53, 0x67, 0x4e,
	0x8f, 0xe5, 0xa0, 0xaf, 0xa1, 0x6f, 0xf9, 0x37, 0xbb, 0x79, 0xf6, 0x6e, 0xcf, 0x60, 0x60, 0x4f,
	0x31, 0xa5, 0x00, 0xe6, 0x18, 0x8e, 0xfc, 0x33, 0x03, 0x30, 0xd3, 0x4c, 0x08, 0xb4, 0xc4, 0x9f,
	0xf5, 0x52, 0x21, 0x7e, 0xa4, 0xbe, 0xc9, 0x10, 0x9a, 0xf7, 0xb8, 0x57, 0x75, 0x0f, 0x22, 0xf9,
	0x49, 0x3f, 0x41, 0xb7, 0x3a, 0x34, 0xb9, 0xeb, 0x43, 0xbc, 0x29, 0x74, 0xbd, 0x83, 0x48, 0x2f,
	0x8e, 0x74, 0x7b, 0x03, 0x60, 0x6e, 0xc4, 0xd3, 0x72, 0x99, 0xfd, 0x9b, 0xd6, 0xfe, 0xf4, 0x02,
	0xba, 0xd5, 0x40, 0x1c, 0xe9, 0x6b, 0x0c, 0x03, 0xfb, 0x4e, 0x49, 0x4a, 0xc4, 0xc9, 0x06, 0xab,
	0x8a, 0xd4, 0x42, 0x1a, 0x32, 0x03, 0x73, 0xa4, 0xea, 0xcf, 0x70, 0xea, 0x5c, 0xb7, 0x47, 0x0b,
	0x27, 0xd0, 0xda, 0xed, 0xb3, 0xb4, 0x9c, 0x00, 0xf5, 0x2d, 0xcf, 0xcc, 0x1a, 0xb0, 0xc7, 0xeb,
	0x9c, 0x85, 0xe0, 0xdf, 0xca, 0x07, 0x91, 0x7c, 0x01, 0x98, 0xb3, 0x2c, 0xc3, 0x54, 0xac, 0x59,
	0x46, 0x0e, 0x17, 0xf4, 0xf0, 0x28, 0xbe, 0x3c, 0x8c, 0xb8, 0xb9, 0xd5, 0xf4, 0xe4, 0xd2, 0xfb,
	0xe0, 0x85, 0x13, 0x38, 0x4b, 0xd9, 0x76, 0xca, 0x59, 0x12, 0xff, 0x62, 0x53, 0xfd, 0xbe, 0x86,
	0xc3, 0x5b, 0xdc, 0x7f, 0x0b, 0x23, 0xf5, 0xcb, 0x42, 0xbe, 0xb5, 0x0b, 0x2f, 0x69, 0xab, 0x47,
	0xf7, 0xe3, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0x88, 0x07, 0xe9, 0x91, 0x84, 0x05, 0x00, 0x00,
}
